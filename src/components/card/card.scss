@import "../../variables.scss";
@import "../../functions.scss";

.card {
    width: $card-width;
    height: $card-height;
    background: linear-gradient(353deg, #b3b3b3 0%, #dedede 38%, #f8f8f8 100%);
    border-radius: 15px;
    position: absolute;
    overflow: visible;
    cursor: pointer;
    display: flex;
    justify-content: center;

    &-button {
        background-color: transparent;
        position: relative;
        top: -30px;
        cursor: pointer;
        border: none;
        outline: none;
        width: 24px;
        height: 24px;
        padding: 0;

        & svg {
            path {
                transition: 0.5s;
                fill: transparent;
                stroke: #ececec;
                opacity: 0.8;
            }

            &:hover {
                path {
                    stroke: transparent;
                    fill: #e9e9e9;
                }
            }
        }
    }
}

$cardsCount: 15;
@for $i from 0 to $cardsCount {
    $cardShadowYOffset: -5px - $i * 3;
    $cardRotateX: -18deg - 9 * $i;
    $cardScale: 1 + $i * 2 / 100;
    $cardTop: 20px * $i + pow($i, 2) * 2px;
    $cardActiveScale: 1 + $i * 5 / 100;
    $cardActiveTranslateY: -300px + 20px * $i;

    .card {
        &:nth-child(#{$i + 1}) {
            @if $i == 0 {
                filter: drop-shadow(20px 20px 6px rgba(0, 0, 0, 0.3));
            } @else {
                filter: drop-shadow(20px $cardShadowYOffset 6px rgba(0, 0, 0, 0.3));
            }
            transform: perspective(600px) rotateX($cardRotateX) scale($cardScale);
            top: $cardTop;
            transition: 0.5s;
            z-index: $i;

            &:hover {
                transform: perspective(600px) rotateX($cardRotateX) scale($cardScale) translateY(-15px);
            }

            &.card_isActive {
                transform: perspective(600px) rotateX(0) scale($cardActiveScale) translateY($cardActiveTranslateY);
                filter: drop-shadow(30px 40px 25px rgba(0, 0, 0, 0.3));
            }

            &.card_isFocused {
                transform: perspective(0) rotateX(0) translateY(0px) scale(1.5);
                z-index: 99;
                top: 0;
                cursor: default;
            }
        }
    }
}
